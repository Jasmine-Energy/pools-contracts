/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ExternalJasminePoolFactoryTest,
  ExternalJasminePoolFactoryTestInterface,
} from "../../../../contracts/test/JasminePoolFactoryTest.sol/ExternalJasminePoolFactoryTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AssertionFailed",
    type: "event",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eat",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBeneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frontHalfPool",
    outputs: [
      {
        internalType: "contract JasminePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint40",
        name: "vintage",
        type: "uint40",
      },
      {
        internalType: "uint32",
        name: "techType",
        type: "uint32",
      },
    ],
    name: "mintEAT",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFactory",
    outputs: [
      {
        internalType: "contract JasminePoolFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolImplementation",
    outputs: [
      {
        internalType: "contract JasminePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retirementService",
    outputs: [
      {
        internalType: "contract JasmineRetirementService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test_owner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test_setup",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516304042d6360e21b815260006004820181905290733f3f61a613504166302c5ee3546b0e85c0a6193490631010b58c90602401602060405180830381865afa158015610064573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100889190610338565b90506001600160a01b0381166100e55760405162461bcd60e51b815260206004820152601b60248201527f4e6f2066726f6e742068616c6620706f6f6c206465706c6f796564000000000060448201526064015b60405180910390fd5b6001600160a01b03811660805260408051638da5cb5b60e01b815290517377f774c6632b1ca6bd248068fbaa952355eae2b591733f3f61a613504166302c5ee3546b0e85c0a6193491638da5cb5b916004808201926020929091908290030181865afa158015610159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017d9190610338565b6001600160a01b0316146101d35760405162461bcd60e51b815260206004820152601360248201527f4f776e6572206d757374206265206f776e65720000000000000000000000000060448201526064016100dc565b733f3f61a613504166302c5ee3546b0e85c0a619346001600160a01b03166391d14854733f3f61a613504166302c5ee3546b0e85c0a619346001600160a01b03166356d735686040518163ffffffff1660e01b8152600401602060405180830381865afa158015610248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026c9190610368565b6040516001600160e01b031960e084901b168152600481019190915273694d38e74b52fbb2c2ddfa54d229097eeab304dd6024820152604401602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e69190610381565b6103325760405162461bcd60e51b815260206004820152601e60248201527f506f6f6c206d616e61676572206d7573742062652061206d616e61676572000060448201526064016100dc565b506103a3565b60006020828403121561034a57600080fd5b81516001600160a01b038116811461036157600080fd5b9392505050565b60006020828403121561037a57600080fd5b5051919050565b60006020828403121561039357600080fd5b8151801515811461036157600080fd5b6080516107966103c5600039600081816101d6015261057201526107966000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637dc0d1d011610097578063d0fb020311610066578063d0fb02031461022e578063dc4c90d314610249578063e78cea9214610264578063eb809e401461027f57600080fd5b80637dc0d1d0146101b65780637f968e99146101d15780638da5cb5b146101f8578063cefa77991461021357600080fd5b8063492fb343116100d3578063492fb343146101685780635e572a631461018357806377493bf3146101a45780637a8062ee146101ae57600080fd5b806307546172146100fa578063340a2a4e146101325780634219dc401461014d575b600080fd5b610115735e71fa178f3b8ca0fc4736b8a85a1b669c042dde81565b6040516001600160a01b0390911681526020015b60405180910390f35b61011573ba3aa8083f8978257aaafb19ed698a623197a7c181565b610115733f3f61a613504166302c5ee3546b0e85c0a6193481565b61011573c6e9b1a30e604ce6c2d32e33b290286b6c1ce55581565b61019661019136600461066a565b61029a565b604051908152602001610129565b6101ac610570565b005b6101ac6105a8565b61011573954f12ab1e40fbd7c28f2ab5285d3c74ba6faf6f81565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b6101157377f774c6632b1ca6bd248068fbaa952355eae2b581565b61011573d09b8538ea6d7147c00c3283e0298836e21de95681565b61011573d2f49a52c07be026804fce08ca46eda6631fca6e81565b61011573694d38e74b52fbb2c2ddfa54d229097eeab304dd81565b610115732dcad29de8a67d70b7b5bf32b19f1480f333d8dd81565b61011573ae205e00c7dcb5292388bd8962e79582a5ae14d081565b6040805167115055081555525160c21b60208083019190915260016029808401829052845180850390910181526049840185528051920191909120606983018290526fffffffffffffffffffffffffffffffff8116608984015260a983019190915264ffffffffff851660c983015263ffffffff841660e98301526000610109830181905261012980840182905284518085039091018152610149909301909352606091603886901b6bffffffffff000000000000001660809290921b6fffffffffffffffffffffffffffffffff1916919091176c01000000000000000000000000179060405163ca669fa760e01b8152735e71fa178f3b8ca0fc4736b8a85a1b669c042dde60048201529193509150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156103e357600080fd5b505af11580156103f7573d6000803e3d6000fd5b50506040516301f8e04360e21b815273954f12ab1e40fbd7c28f2ab5285d3c74ba6faf6f92506307e3810c915061043490859085906004016106d0565b600060405180830381600087803b15801561044e57600080fd5b505af1158015610462573d6000803e3d6000fd5b505060405163ca669fa760e01b8152735e71fa178f3b8ca0fc4736b8a85a1b669c042dde6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156104c657600080fd5b505af11580156104da573d6000803e3d6000fd5b505060405163731133e960e01b81526001600160a01b03891660048201526024810185905260448101889052608060648201526000608482015273ba3aa8083f8978257aaafb19ed698a623197a7c1925063731133e9915060a401600060405180830381600087803b15801561054f57600080fd5b505af1158015610563573d6000803e3d6000fd5b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105a6576105a6610726565b565b7377f774c6632b1ca6bd248068fbaa952355eae2b56001600160a01b0316733f3f61a613504166302c5ee3546b0e85c0a619346001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c919061073c565b6001600160a01b0316146105a6576105a6610726565b6001600160a01b038116811461066757600080fd5b50565b6000806000806080858703121561068057600080fd5b843561068b81610652565b935060208501359250604085013564ffffffffff811681146106ac57600080fd5b9150606085013563ffffffff811681146106c557600080fd5b939692955090935050565b82815260006020604081840152835180604085015260005b81811015610704578581018301518582016060015282016106e8565b506000606082860101526060601f19601f830116850101925050509392505050565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561074e57600080fd5b815161075981610652565b939250505056fea264697066735822122058c73d81346937b73644f5aaec3c7f36d36be86ee395882f4ae1a9d9cf3122f164736f6c63430008140033";

type ExternalJasminePoolFactoryTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExternalJasminePoolFactoryTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExternalJasminePoolFactoryTest__factory extends ContractFactory {
  constructor(...args: ExternalJasminePoolFactoryTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExternalJasminePoolFactoryTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<ExternalJasminePoolFactoryTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExternalJasminePoolFactoryTest {
    return super.attach(address) as ExternalJasminePoolFactoryTest;
  }
  override connect(signer: Signer): ExternalJasminePoolFactoryTest__factory {
    return super.connect(signer) as ExternalJasminePoolFactoryTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExternalJasminePoolFactoryTestInterface {
    return new utils.Interface(_abi) as ExternalJasminePoolFactoryTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExternalJasminePoolFactoryTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExternalJasminePoolFactoryTest;
  }
}

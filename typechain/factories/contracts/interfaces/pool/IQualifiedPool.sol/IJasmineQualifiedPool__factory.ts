/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IJasmineQualifiedPool,
  IJasmineQualifiedPoolInterface,
} from "../../../../../contracts/interfaces/pool/IQualifiedPool.sol/IJasmineQualifiedPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Unqualified",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "meetsPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "isEligible",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "metadataVersion",
        type: "uint8",
      },
    ],
    name: "policyForVersion",
    outputs: [
      {
        internalType: "bytes",
        name: "policy",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IJasmineQualifiedPool__factory {
  static readonly abi = _abi;
  static createInterface(): IJasmineQualifiedPoolInterface {
    return new utils.Interface(_abi) as IJasmineQualifiedPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IJasmineQualifiedPool {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IJasmineQualifiedPool;
  }
}

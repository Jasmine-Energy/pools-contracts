/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JasmineRetirementService,
  JasmineRetirementServiceInterface,
} from "../../contracts/JasmineRetirementService";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_eat",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Disabled",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "Prohibited",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "RequiresRole",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "metadataVersion",
        type: "uint8",
      },
    ],
    name: "UnsupportedMetadataVersion",
    type: "error",
  },
  {
    inputs: [],
    name: "ValidationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC1820_REGISTRY",
    outputs: [
      {
        internalType: "contract IERC1820Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eat",
    outputs: [
      {
        internalType: "contract IJasmineEAT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "contract IJasmineMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "registerRetirementRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052306080523480156200001557600080fd5b50604051620023f4380380620023f4833981016040819052620000389162000181565b600054610100900460ff1615808015620000595750600054600160ff909116105b80620000755750303b15801562000075575060005460ff166001145b620000dd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff19166001179055801562000101576000805461ff0019166101001790555b6001600160a01b0380841660a052821660c05280156200015b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050620001b9565b80516001600160a01b03811681146200017c57600080fd5b919050565b600080604083850312156200019557600080fd5b620001a08362000164565b9150620001b06020840162000164565b90509250929050565b60805160a05160c0516121a262000252600039600081816101b30152818161072901528181610a280152610ada01526000818161017f015281816107ad015281816109f901528181610b5e015281816110ca015281816112df015261147001526000818161038d015281816103d601528181610475015281816104b50152818161054801528181610914015261095401526121a26000f3fe6080604052600436106100f35760003560e01c806379ba50971161008a578063c4d66de811610059578063c4d66de8146102ce578063e30c3978146102ee578063f23a6e611461030c578063f2fde38b1461032c57600080fd5b806379ba5097146102425780638da5cb5b14610257578063904bd23e14610275578063bc197c811461029557600080fd5b80633659cfe6116100c65780633659cfe6146101d55780634f1ef286146101f757806352d1902d1461020a578063715018a61461022d57600080fd5b8063013eb177146100f857806301ffc9a71461013d578063075461721461016d578063340a2a4e146101a1575b600080fd5b34801561010457600080fd5b50610120731820a4b7618bde71dce8cdc73aab6c95905fad2481565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014957600080fd5b5061015d610158366004611a12565b61034c565b6040519015158152602001610134565b34801561017957600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ad57600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e157600080fd5b506101f56101f0366004611a51565b610383565b005b6101f5610205366004611b25565b61046b565b34801561021657600080fd5b5061021f61053b565b604051908152602001610134565b34801561023957600080fd5b506101f56105ee565b34801561024e57600080fd5b506101f5610602565b34801561026357600080fd5b506097546001600160a01b0316610120565b34801561028157600080fd5b506101f5610290366004611b75565b610679565b3480156102a157600080fd5b506102b56102b0366004611c3d565b61071c565b6040516001600160e01b03199091168152602001610134565b3480156102da57600080fd5b506101f56102e9366004611a51565b61084a565b3480156102fa57600080fd5b5060c9546001600160a01b0316610120565b34801561031857600080fd5b506102b5610327366004611ceb565b610acd565b34801561033857600080fd5b506101f5610347366004611a51565b610bfb565b60006001600160e01b03198216630271189760e51b148061037d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103d45760405162461bcd60e51b81526004016103cb90611d54565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661041d600080516020612126833981519152546001600160a01b031690565b6001600160a01b0316146104435760405162461bcd60e51b81526004016103cb90611da0565b61044c81610c6c565b6040805160008082526020820190925261046891839190610c74565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104b35760405162461bcd60e51b81526004016103cb90611d54565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104fc600080516020612126833981519152546001600160a01b031690565b6001600160a01b0316146105225760405162461bcd60e51b81526004016103cb90611da0565b61052b82610c6c565b61053782826001610c74565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105db5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103cb565b5060008051602061212683398151915290565b6105f6610de4565b6106006000610e3e565b565b60c95433906001600160a01b031681146106705760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016103cb565b61046881610e3e565b731820a4b7618bde71dce8cdc73aab6c95905fad246329965a1d6001600160a01b038416156106a857836106aa565b335b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152631f7e364f60e21b60248201529084166044820152606401600060405180830381600087803b15801561070057600080fd5b505af1158015610714573d6000803e3d6000fd5b505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461076757604051632b0039c760e21b815260040160405180910390fd5b8151156108205760008061077a84610e57565b915091508115610796576107918787878488610ed7565b610819565b6040516338243e8f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e090fa3c906107e690899089908990600401611e77565b600060405180830381600087803b15801561080057600080fd5b505af1158015610814573d6000803e3d6000fd5b505050505b5050610838565b61083885858560006108338a6000611147565b610ed7565b5063bc197c8160e01b95945050505050565b600054610100900460ff161580801561086a5750600054600160ff909116105b806108845750303b158015610884575060005460ff166001145b6108e75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103cb565b6000805460ff19166001179055801561090a576000805461ff0019166101001790555b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036109525760405162461bcd60e51b81526004016103cb90611d54565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661099b600080516020612126833981519152546001600160a01b031690565b6001600160a01b0316146109c15760405162461bcd60e51b81526004016103cb90611da0565b6109ca82610e3e565b6109d2611198565b6109da6111bf565b6109e2611198565b60405163a22cb46560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600160248301527f0000000000000000000000000000000000000000000000000000000000000000169063a22cb46590604401600060405180830381600087803b158015610a6c57600080fd5b505af1158015610a80573d6000803e3d6000fd5b505050508015610537576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b1857604051632b0039c760e21b815260040160405180910390fd5b815115610bd157600080610b2b84610e57565b915091508115610b4757610b4287878784886111ee565b610bca565b6040516380a5a37160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906380a5a37190610b9790899089908990600401611eb0565b600060405180830381600087803b158015610bb157600080fd5b505af1158015610bc5573d6000803e3d6000fd5b505050505b5050610be9565b610be98585856000610be48a6000611147565b6111ee565b5063f23a6e6160e01b95945050505050565b610c03610de4565b60c980546001600160a01b0383166001600160a01b03199091168117909155610c346097546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610468610de4565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610cac57610ca783611355565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d06575060408051601f3d908101601f19168201909252610d0391810190611ed8565b60015b610d695760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103cb565b6000805160206121268339815191528114610dd85760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103cb565b50610ca78383836113f1565b6097546001600160a01b031633146106005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cb565b60c980546001600160a01b03191690556104688161141c565b6000808251600003610e7c5760405163b4fa3fb360e01b815260040160405180910390fd5b600083600081518110610e9157610e91611ef1565b01602001516001600160f81b0319169050801580610ebc57506001600160f81b03198116600160f81b145b946001600160f81b031991909116600160f81b149350915050565b82518451141580610ee757508351155b15610f055760405163b4fa3fb360e01b815260040160405180910390fd5b6002815110610f2b5780806020019051810190610f229190611f07565b9550610f739050565b8051600103610f5d578085604051602001610f47929190611f43565b6040516020818303038152906040529050610f73565b8051600003610f7357610f708583611147565b90505b81156110b357610f9c84600081518110610f8f57610f8f611ef1565b602002602001015161146e565b600060f81b81600081518110610fb457610fb4611ef1565b60200101906001600160f81b031916908160001a90535082600081518110610fde57610fde611ef1565b602002602001015160010361108d57611024846040516020016110019190611f7a565b604051602081830303815290604052600180875161101f9190611fa3565b611515565b8060200190518101906110379190611fb6565b935061106b8360405160200161104d9190611f7a565b604051602081830303815290604052600180865161101f9190611fa3565b80602001905181019061107e9190611fb6565b845190935015611140576110b3565b826000815181106110a0576110a0611ef1565b6020908102919091010180516000190190525b6040516338243e8f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e090fa3c9061110390879087908690600401611e77565b600060405180830381600087803b15801561111d57600080fd5b505af1158015611131573d6000803e3d6000fd5b505050506111408585856115c8565b5050505050565b60608161115557600061115b565b600160f81b5b604080516001600160f81b031990921660208301526001600160a01b03851690820152606001604051602081830303815290604052905092915050565b600054610100900460ff166106005760405162461bcd60e51b81526004016103cb90612047565b600054610100900460ff166111e65760405162461bcd60e51b81526004016103cb90612047565b6106006116cb565b8260000361120f5760405163b4fa3fb360e01b815260040160405180910390fd5b6002815110611235578080602001905181019061122c9190611f07565b955061127d9050565b8051600103611267578085604051602001611251929190611f43565b604051602081830303815290604052905061127d565b805160000361127d5761127a8583611147565b90505b81156112c85761128c8461146e565b6001831461114057805160001990930192600090829082906112b0576112b0611ef1565b60200101906001600160f81b031916908160001a9053505b6040516380a5a37160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906380a5a3719061131890879087908690600401611eb0565b600060405180830381600087803b15801561133257600080fd5b505af1158015611346573d6000803e3d6000fd5b505050506111408585856116fb565b6001600160a01b0381163b6113c25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103cb565b60008051602061212683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6113fa83611883565b6000825111806114075750805b15610ca75761141683836118c3565b50505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166380a5a3718260016114c960408051600160f81b602082015260609101604051602081830303815290604052905090565b6040518463ffffffff1660e01b81526004016114e793929190611eb0565b600060405180830381600087803b15801561150157600080fd5b505af1158015611140573d6000803e3d6000fd5b60608161152381601f612092565b108061153857506115348284612092565b8451105b1561155657604051630a0b0d7960e01b815260040160405180910390fd5b60608215801561157557604051915060008252602082016040526115bf565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156115ae578051835260209283019201611596565b5050858452601f01601f1916604052505b50949350505050565b60405163555ddc6560e11b81526001600160a01b0384166004820152631f7e364f60e21b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015611630573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165491906120a5565b90506001600160a01b0381161561141657604051631f7e364f60e21b81526001600160a01b03821690637df8d93c90611695908790879087906004016120c2565b600060405180830381600087803b1580156116af57600080fd5b505af19250505080156116c0575060015b156114165750505050565b600054610100900460ff166116f25760405162461bcd60e51b81526004016103cb90612047565b61060033610e3e565b60405163555ddc6560e11b81526001600160a01b0384166004820152631f7e364f60e21b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015611763573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178791906120a5565b90506001600160a01b0381161561141657604080516001808252818301909252600091829190602080830190803683375050604080516001808252818301909252915060208083019080368337019050509150915084826000815181106117f0576117f0611ef1565b602002602001018181525050838160008151811061181057611810611ef1565b6020908102919091010152604051631f7e364f60e21b81526001600160a01b03841690637df8d93c9061184b908990869086906004016120c2565b600060405180830381600087803b15801561186557600080fd5b505af1925050508015611876575060015b1561071457505050505050565b61188c81611355565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606118e88383604051806060016040528060278152602001612146602791396118ef565b9392505050565b6060600080856001600160a01b03168560405161190c91906120f6565b600060405180830381855af49150503d8060008114611947576040519150601f19603f3d011682016040523d82523d6000602084013e61194c565b606091505b509150915061195d86838387611967565b9695505050505050565b606083156119d65782516000036119cf576001600160a01b0385163b6119cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103cb565b50816119e0565b6119e083836119e8565b949350505050565b8151156119f85781518083602001fd5b8060405162461bcd60e51b81526004016103cb9190612112565b600060208284031215611a2457600080fd5b81356001600160e01b0319811681146118e857600080fd5b6001600160a01b038116811461046857600080fd5b600060208284031215611a6357600080fd5b81356118e881611a3c565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611aad57611aad611a6e565b604052919050565b600082601f830112611ac657600080fd5b813567ffffffffffffffff811115611ae057611ae0611a6e565b611af3601f8201601f1916602001611a84565b818152846020838601011115611b0857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611b3857600080fd5b8235611b4381611a3c565b9150602083013567ffffffffffffffff811115611b5f57600080fd5b611b6b85828601611ab5565b9150509250929050565b60008060408385031215611b8857600080fd5b8235611b9381611a3c565b91506020830135611ba381611a3c565b809150509250929050565b600067ffffffffffffffff821115611bc857611bc8611a6e565b5060051b60200190565b600082601f830112611be357600080fd5b81356020611bf8611bf383611bae565b611a84565b82815260059290921b84018101918181019086841115611c1757600080fd5b8286015b84811015611c325780358352918301918301611c1b565b509695505050505050565b600080600080600060a08688031215611c5557600080fd5b8535611c6081611a3c565b94506020860135611c7081611a3c565b9350604086013567ffffffffffffffff80821115611c8d57600080fd5b611c9989838a01611bd2565b94506060880135915080821115611caf57600080fd5b611cbb89838a01611bd2565b93506080880135915080821115611cd157600080fd5b50611cde88828901611ab5565b9150509295509295909350565b600080600080600060a08688031215611d0357600080fd5b8535611d0e81611a3c565b94506020860135611d1e81611a3c565b93506040860135925060608601359150608086013567ffffffffffffffff811115611d4857600080fd5b611cde88828901611ab5565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600081518084526020808501945080840160005b83811015611e1c57815187529582019590820190600101611e00565b509495945050505050565b60005b83811015611e42578181015183820152602001611e2a565b50506000910152565b60008151808452611e63816020860160208601611e27565b601f01601f19169290920160200192915050565b606081526000611e8a6060830186611dec565b8281036020840152611e9c8186611dec565b9050828103604084015261195d8185611e4b565b838152826020820152606060408201526000611ecf6060830184611e4b565b95945050505050565b600060208284031215611eea57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008060408385031215611f1a57600080fd5b82516001600160f81b031981168114611f3257600080fd5b6020840151909250611ba381611a3c565b60008351611f55818460208801611e27565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b6020815260006118e86020830184611dec565b634e487b7160e01b600052601160045260246000fd5b8181038181111561037d5761037d611f8d565b60006020808385031215611fc957600080fd5b825167ffffffffffffffff811115611fe057600080fd5b8301601f81018513611ff157600080fd5b8051611fff611bf382611bae565b81815260059190911b8201830190838101908783111561201e57600080fd5b928401925b8284101561203c57835182529284019290840190612023565b979650505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8082018082111561037d5761037d611f8d565b6000602082840312156120b757600080fd5b81516118e881611a3c565b6001600160a01b03841681526060602082015260006120e46060830185611dec565b828103604084015261195d8185611dec565b60008251612108818460208701611e27565b9190910192915050565b6020815260006118e86020830184611e4b56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f99225d2fced8a01399f4ec359078a98b20de8899e356b121146738aaee6dac464736f6c63430008140033";

type JasmineRetirementServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JasmineRetirementServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JasmineRetirementService__factory extends ContractFactory {
  constructor(...args: JasmineRetirementServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _minter: PromiseOrValue<string>,
    _eat: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JasmineRetirementService> {
    return super.deploy(
      _minter,
      _eat,
      overrides || {}
    ) as Promise<JasmineRetirementService>;
  }
  override getDeployTransaction(
    _minter: PromiseOrValue<string>,
    _eat: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_minter, _eat, overrides || {});
  }
  override attach(address: string): JasmineRetirementService {
    return super.attach(address) as JasmineRetirementService;
  }
  override connect(signer: Signer): JasmineRetirementService__factory {
    return super.connect(signer) as JasmineRetirementService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JasmineRetirementServiceInterface {
    return new utils.Interface(_abi) as JasmineRetirementServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JasmineRetirementService {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as JasmineRetirementService;
  }
}

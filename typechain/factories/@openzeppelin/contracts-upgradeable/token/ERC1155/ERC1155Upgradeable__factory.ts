/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Upgradeable,
  ERC1155UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061147a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610d64565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610da7565b610227565b60405190151581526020016100a9565b6100e86100e3366004610dcb565b610277565b6040516100a99190610e2a565b610108610103366004610f89565b61030b565b005b61011d610118366004611033565b61039e565b6040516100a99190611139565b61010861013836600461114c565b6104c8565b6100c561014b366004611188565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101086101873660046111bb565b6104d7565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025857506001600160e01b031982166303a24d0760e21b145b8061022157506301ffc9a760e01b6001600160e01b0319831614610221565b60606067805461028690611220565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290611220565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103275750610327853361014b565b61038a5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b60648201526084016101f3565b6103978585858585610563565b5050505050565b606081518351146104035760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff81111561041f5761041f610e3d565b604051908082528060200260200182016040528015610448578160200160208202803683370190505b50905060005b84518110156104c05761049385828151811061046c5761046c61125a565b60200260200101518583815181106104865761048661125a565b602002602001015161018c565b8282815181106104a5576104a561125a565b60209081029190910101526104b981611286565b905061044e565b509392505050565b6104d33383836107c4565b5050565b6001600160a01b0385163314806104f357506104f3853361014b565b6105565760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b60648201526084016101f3565b61039785858585856108a4565b81518351146105c55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b0384166106295760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016101f3565b3360005b845181101561075657600085828151811061064a5761064a61125a565b6020026020010151905060008583815181106106685761066861125a565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156106fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016101f3565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061073b90849061129f565b925050819055505050508061074f90611286565b905061062d565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107a69291906112b2565b60405180910390a46107bc818787878787610a53565b505050505050565b816001600160a01b0316836001600160a01b0316036108375760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109085760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016101f3565b33600061091485610c01565b9050600061092185610c01565b905060008681526065602090815260408083206001600160a01b038c168452909152902054858110156109a95760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016101f3565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906109e890849061129f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a48848a8a8a8a8a610c4c565b505050505050505050565b6001600160a01b0384163b156107bc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a9790899089908890889088906004016112e0565b6020604051808303816000875af1925050508015610ad2575060408051601f3d908101601f19168201909252610acf9181019061133e565b60015b610b8757610ade61135b565b806308c379a003610b175750610af2611377565b80610afd5750610b19565b8060405162461bcd60e51b81526004016101f39190610e2a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610bf85760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016101f3565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c3b57610c3b61125a565b602090810291909101015292915050565b6001600160a01b0384163b156107bc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c909089908990889088908890600401611401565b6020604051808303816000875af1925050508015610ccb575060408051601f3d908101601f19168201909252610cc89181019061133e565b60015b610cd757610ade61135b565b6001600160e01b0319811663f23a6e6160e01b14610bf85760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016101f3565b80356001600160a01b0381168114610d5f57600080fd5b919050565b60008060408385031215610d7757600080fd5b610d8083610d48565b946020939093013593505050565b6001600160e01b031981168114610da457600080fd5b50565b600060208284031215610db957600080fd5b8135610dc481610d8e565b9392505050565b600060208284031215610ddd57600080fd5b5035919050565b6000815180845260005b81811015610e0a57602081850181015186830182015201610dee565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610dc46020830184610de4565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610e7957610e79610e3d565b6040525050565b600067ffffffffffffffff821115610e9a57610e9a610e3d565b5060051b60200190565b600082601f830112610eb557600080fd5b81356020610ec282610e80565b604051610ecf8282610e53565b83815260059390931b8501820192828101915086841115610eef57600080fd5b8286015b84811015610f0a5780358352918301918301610ef3565b509695505050505050565b600082601f830112610f2657600080fd5b813567ffffffffffffffff811115610f4057610f40610e3d565b604051610f57601f8301601f191660200182610e53565b818152846020838601011115610f6c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610fa157600080fd5b610faa86610d48565b9450610fb860208701610d48565b9350604086013567ffffffffffffffff80821115610fd557600080fd5b610fe189838a01610ea4565b94506060880135915080821115610ff757600080fd5b61100389838a01610ea4565b9350608088013591508082111561101957600080fd5b5061102688828901610f15565b9150509295509295909350565b6000806040838503121561104657600080fd5b823567ffffffffffffffff8082111561105e57600080fd5b818501915085601f83011261107257600080fd5b8135602061107f82610e80565b60405161108c8282610e53565b83815260059390931b85018201928281019150898411156110ac57600080fd5b948201945b838610156110d1576110c286610d48565b825294820194908201906110b1565b965050860135925050808211156110e757600080fd5b506110f485828601610ea4565b9150509250929050565b600081518084526020808501945080840160005b8381101561112e57815187529582019590820190600101611112565b509495945050505050565b602081526000610dc460208301846110fe565b6000806040838503121561115f57600080fd5b61116883610d48565b91506020830135801515811461117d57600080fd5b809150509250929050565b6000806040838503121561119b57600080fd5b6111a483610d48565b91506111b260208401610d48565b90509250929050565b600080600080600060a086880312156111d357600080fd5b6111dc86610d48565b94506111ea60208701610d48565b93506040860135925060608601359150608086013567ffffffffffffffff81111561121457600080fd5b61102688828901610f15565b600181811c9082168061123457607f821691505b60208210810361125457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161129857611298611270565b5060010190565b8082018082111561022157610221611270565b6040815260006112c560408301856110fe565b82810360208401526112d781856110fe565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261130c60a08301866110fe565b828103606084015261131e81866110fe565b905082810360808401526113328185610de4565b98975050505050505050565b60006020828403121561135057600080fd5b8151610dc481610d8e565b600060033d11156113745760046000803e5060005160e01c5b90565b600060443d10156113855790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156113b557505050505090565b82850191508151818111156113cd5750505050505090565b843d87010160208285010111156113e75750505050505090565b6113f660208286010187610e53565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261143960a0830184610de4565b97965050505050505056fea26469706673582212200e444f46235efd7b2c2e0c51ee4aec859f8cb979a7a65eca3c20726c6182983864736f6c63430008140033";

type ERC1155UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC1155UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC1155Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Upgradeable {
    return super.attach(address) as ERC1155Upgradeable;
  }
  override connect(signer: Signer): ERC1155Upgradeable__factory {
    return super.connect(signer) as ERC1155Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155UpgradeableInterface {
    return new utils.Interface(_abi) as ERC1155UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Upgradeable;
  }
}
